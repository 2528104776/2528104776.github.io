<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>错题分析与总结</title>
      <link href="2021/07/06/2175/"/>
      <url>2021/07/06/2175/</url>
      
        <content type="html"><![CDATA[<p>试卷一:中餐<br>许多人喜欢中餐，在中国,烹饪不仅被视为一种技能,而且也被视为一种艺术。精心准备的中餐既可口又好看,烹饪技艺和配料在中国各地差别很大。但好的烹饪都有一个共同点，总是要考虑到颜色、味道、口感和营养(nutrition)。由于食物对健康至关重要，好的厨师总是努力在谷物”肉类和蔬菜之间取得平衡，所以中餐既味美又健康。</p><p><img src="/post_pictures/4848948.jpg" alt="截图"></p><p>错误总结：</p><ol><li>错误使用cook 作主语，应该使用动名词形式</li><li>xxx is not only xxx but also, 前后句子结构应当保持一致，使用同一个谓语动词</li><li> an art (元音发音单词前使用an) 或者使用一种艺术:a form of art</li><li>The elaborate Chinese food      the特指中国食物</li><li>使用Good cooking 或者 it 作形式主语，避免头轻脚重</li><li>cooker 指厨具 or 指人多 er 指物多</li><li>insist v.坚持  insistently adv.坚持地 </li><li>seek 寻找，between and  xx和xx之间</li><li>health n.健康 healthy adj.健康的 meat 肉</li><li>in common .phr 相同的</li></ol><p>疑问：</p><ol><li>insistently 修饰 trying ，副词可以修饰动名词吗？</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>错题分析与总结</title>
      <link href="2021/07/06/2176/"/>
      <url>2021/07/06/2176/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><img src="/post_pictures/QQ%E5%9B%BE%E7%89%8720210706082401.jpg" alt="截图"></p><h1 id="生词短语积累"><a href="#生词短语积累" class="headerlink" title="生词短语积累"></a>生词短语积累</h1><p>1.rapidly developing  快速发展</p><p>2.required course 必修课程</p><p>3.situation n.情况,形式</p><p>4.Think it’s … 认为…</p><p>5.unnecessary adj.不必要的 ；necessary adj.必不可少的,必须的</p><p>6.traditional course 传统课程</p><p>7.一部分人 group of people</p><p>8.to attract attention 引起…的注意</p><p>9.move 举措</p><p>10.arouse public concren 唤醒公众注意</p><p>11.keep pace with the times 与时俱进</p><p>12.Chinese citizens 中国公民</p><h1 id="语法错误"><a href="#语法错误" class="headerlink" title="语法错误"></a>语法错误</h1><ol><li><p>定语从句重attract 不能在前加to ，否则变成非谓语动词成分</p></li><li><p>about which 指代前面的 “required course”所以不能加逗号</p></li></ol><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p>think同义词：view, believe,conclude,hold opinion that,guess,assume,reckon,deem</p><p>表示 然而的词: Anyway无论如何，无论怎样   However 然而</p><h1 id="参考例句"><a href="#参考例句" class="headerlink" title="参考例句"></a>参考例句</h1><p>She shouted to ==attract== their ==attention==.她大声叫嚷以引起他们的注意。</p><p>The management have made no ==move== to settle the strike. 资方没有采取任何措施来解决罢工问题。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>有效的英语学习</title>
      <link href="2021/07/04/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
      <url>2021/07/04/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><p>[TOC]</p><p>一、理清目标：</p><ol><li>学翻译，读英文小说，和老外交流，看新闻和代码文档</li><li>就业，很多职业需要英文水平，掌握一门语言能有更多就业机会</li><li>脑健康，预防老年痴呆，掌握多门语言脑子更加灵活</li></ol><p>二、你需要多少词汇量？</p><p>你到底需要多少词汇量才能正常沟通或者说读小说新闻？</p><ol><li><p><a href="https://my.vocabularysize.com/">English Vocabulary Size Test</a></p></li><li><p><a href="https://www.arealme.com/vocabulary-size-test/en/">选词测试词汇量</a></p><p>背单词方法有哪些？</p><p>可以使用词根词缀法</p><p>其他自己喜欢的方法</p></li></ol><p>三、听、写</p><p>推荐网站</p><ol><li><p>China voa 美国之音</p></li><li><p>TED Radio Hour</p></li><li><p>This American Life</p></li><li><p>Voa bbc PBS </p></li><li><p>可可音乐</p><p>听起来费劲儿 也得坚持听，精听的时候可以默写来检查自己的效果。另外可以尝试趣配音APP</p></li></ol><p>四、读、说</p><p>广泛的去读，去了解历史。一边读一边查词。</p><p>推荐一个取经号，优质文章。推荐工具：</p><ol><li><p><a href="https://www.english-corpora.org/coca/">查词频率</a></p></li><li><p><a href="https://www.merriam=webster.com/thesaurus">查近义词反义词</a></p></li><li><p>语法检查:grammarly(最好还是有人帮你改文章)</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>公众号开发</title>
      <link href="2021/06/19/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/"/>
      <url>2021/06/19/%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一、微信公众号配置"><a href="#一、微信公众号配置" class="headerlink" title="一、微信公众号配置"></a>一、微信公众号配置</h1><p>首先进入测试公众号内进行调试:<a href="https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&t=sandbox/index">公众号测试号申请</a></p><ol><li>URL:填写自己服务器的公网IP或者域名地址</li><li>Token:自定义一个，与web应用程序保持一致。</li></ol><h1 id="二、编写代码"><a href="#二、编写代码" class="headerlink" title="二、编写代码"></a>二、编写代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding=utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,g,request,make_response</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.debug=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/wechat&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat_auth</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        signature = request.args.get(<span class="string">&#x27;signature&#x27;</span>)</span><br><span class="line">        timestamp = request.args.get(<span class="string">&#x27;timestamp&#x27;</span>)</span><br><span class="line">        echostr = request.args.get(<span class="string">&#x27;echostr&#x27;</span>)</span><br><span class="line">        nonce = request.args.get(<span class="string">&#x27;nonce&#x27;</span>)</span><br><span class="line">        token = <span class="string">&#x27;printhhz&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(request.args) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;hello, this is handle view&quot;</span></span><br><span class="line">        <span class="built_in">list</span> = [token, timestamp, nonce]</span><br><span class="line">        <span class="built_in">list</span>.sort()</span><br><span class="line">        s = <span class="built_in">list</span>[<span class="number">0</span>] + <span class="built_in">list</span>[<span class="number">1</span>] + <span class="built_in">list</span>[<span class="number">2</span>]</span><br><span class="line">        hashcode = hashlib.sha1(s.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> hashcode == signature:</span><br><span class="line">            <span class="keyword">return</span> echostr</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;验证失败&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rec = request.stream.read()</span><br><span class="line">        xml_rec = ET.fromstring(rec)</span><br><span class="line">        tou = xml_rec.find(<span class="string">&#x27;ToUserName&#x27;</span>).text</span><br><span class="line">        fromu = xml_rec.find(<span class="string">&#x27;FromUserName&#x27;</span>).text</span><br><span class="line">        content = xml_rec.find(<span class="string">&#x27;Content&#x27;</span>).text</span><br><span class="line">        xml_rep = <span class="string">&quot;&lt;xml&gt;&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;&lt;CreateTime&gt;%s&lt;/CreateTime&gt;&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;&lt;/xml&gt;&quot;</span></span><br><span class="line">        response = make_response(xml_rep % (fromu,tou,<span class="built_in">str</span>(<span class="built_in">int</span>(time.time())), content))</span><br><span class="line">        response.content_type=<span class="string">&#x27;application/xml&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello weixin!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、添加查课服务"><a href="#三、添加查课服务" class="headerlink" title="三、添加查课服务"></a>三、添加查课服务</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding=utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time,hashlib,requests</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,g,request,make_response</span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"><span class="keyword">from</span> CourseChecking <span class="keyword">import</span> Course</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.debug=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1905080101</span></span><br><span class="line"><span class="comment">#入学年份-学院代码-专业代码-班级-班级序号</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/wechat&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat_auth</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        signature = request.args.get(<span class="string">&#x27;signature&#x27;</span>)</span><br><span class="line">        timestamp = request.args.get(<span class="string">&#x27;timestamp&#x27;</span>)</span><br><span class="line">        echostr = request.args.get(<span class="string">&#x27;echostr&#x27;</span>)</span><br><span class="line">        nonce = request.args.get(<span class="string">&#x27;nonce&#x27;</span>)</span><br><span class="line">        token = <span class="string">&#x27;printhhz&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(request.args) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;hello, this is handle view&quot;</span></span><br><span class="line">        <span class="built_in">list</span> = [token, timestamp, nonce]</span><br><span class="line">        <span class="built_in">list</span>.sort()</span><br><span class="line">        s = <span class="built_in">list</span>[<span class="number">0</span>] + <span class="built_in">list</span>[<span class="number">1</span>] + <span class="built_in">list</span>[<span class="number">2</span>]</span><br><span class="line">        hashcode = hashlib.sha1(s.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> hashcode == signature:</span><br><span class="line">            <span class="keyword">return</span> echostr</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;验证失败&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rec = request.stream.read()</span><br><span class="line">        xml_rec = ET.fromstring(rec)</span><br><span class="line">        tou = xml_rec.find(<span class="string">&#x27;ToUserName&#x27;</span>).text</span><br><span class="line">        fromu = xml_rec.find(<span class="string">&#x27;FromUserName&#x27;</span>).text</span><br><span class="line">        content = xml_rec.find(<span class="string">&#x27;Content&#x27;</span>).text</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;来自&#123;0&#125;的消息:&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(fromu,content))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> content==<span class="string">&quot;查课&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> reply_course(fromu,tou)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> content==<span class="string">&quot;20级汽营二班&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> reply_course(fromu,tou,<span class="string">&#x27;2002060242&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> content==<span class="string">&quot;20级汽营一班&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> reply_course(fromu,tou,<span class="string">&#x27;2002060139&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> content==<span class="string">&quot;20级数媒一班&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> reply_course(fromu,tou,<span class="string">&#x27;2004090114&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> content==<span class="string">&quot;19级风景园林&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> reply_course(fromu,tou,<span class="string">&#x27;1903060106&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> content==<span class="string">&quot;天气&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> weather(fromu,tou)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> void(fromu,tou)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello weixin!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reply_course</span>(<span class="params">fromu,tou,<span class="built_in">id</span>=<span class="string">&#x27;1905080101&#x27;</span></span>):</span></span><br><span class="line">    course = Course(<span class="built_in">id</span>,<span class="built_in">id</span>+ <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    result = course.get_course_info()</span><br><span class="line">    weeks = [<span class="literal">None</span>, <span class="string">&#x27;周一&#x27;</span>, <span class="string">&quot;周二&quot;</span>, <span class="string">&quot;周三&quot;</span>, <span class="string">&quot;周四&quot;</span>, <span class="string">&quot;周五&quot;</span>, <span class="string">&quot;周六&quot;</span>, <span class="string">&quot;周天&quot;</span>]</span><br><span class="line">    new_string = <span class="string">&#x27;阿狸提醒:当前为第&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time.strftime(<span class="string">&quot;%W&quot;</span>)) -<span class="number">8</span>) + <span class="string">&#x27;周\n&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> result.items():</span><br><span class="line">        new_string += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> value:</span><br><span class="line">            string = <span class="string">&#x27;&#123;0&#125;:&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(weeks[<span class="built_in">int</span>(key)], cell)</span><br><span class="line">            new_string += string + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    xml_rep = <span class="string">&quot;&lt;xml&gt;&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;&lt;CreateTime&gt;%s&lt;/CreateTime&gt;&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;&lt;/xml&gt;&quot;</span></span><br><span class="line">    response = make_response(xml_rep % (fromu, tou, <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())), new_string), <span class="number">200</span>)</span><br><span class="line">    response.content_type = <span class="string">&#x27;application/xml&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">void</span>(<span class="params">fromu,tou</span>):</span></span><br><span class="line">    xml_rep = <span class="string">&quot;&lt;xml&gt;&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;&lt;CreateTime&gt;%s&lt;/CreateTime&gt;&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;&lt;/xml&gt;&quot;</span></span><br><span class="line">    response = make_response(xml_rep % (fromu, tou, <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())), <span class="string">&#x27;公众号正在开发中,功能未完善,快去给我提提建议。&#x27;</span>), <span class="number">200</span>)</span><br><span class="line">    response.content_type = <span class="string">&#x27;application/xml&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weather</span>(<span class="params">fromu,tou</span>):</span></span><br><span class="line">    u1 = <span class="string">&#x27;https://devapi.qweather.com/v7/weather/now?key=c8da609103584539bcd8e1d06643208c&amp;location=114.344649,30.461788&#x27;</span></span><br><span class="line">    res = requests.get(u1).json()</span><br><span class="line">    temp = res[<span class="string">&#x27;now&#x27;</span>][<span class="string">&#x27;temp&#x27;</span>]</span><br><span class="line">    text = res[<span class="string">&#x27;now&#x27;</span>][<span class="string">&#x27;text&#x27;</span>]</span><br><span class="line">    windDir = res[<span class="string">&#x27;now&#x27;</span>][<span class="string">&#x27;windDir&#x27;</span>]</span><br><span class="line">    windSpeed = res[<span class="string">&#x27;now&#x27;</span>][<span class="string">&#x27;windSpeed&#x27;</span>]</span><br><span class="line">    humidity = res[<span class="string">&#x27;now&#x27;</span>][<span class="string">&#x27;humidity&#x27;</span>]</span><br><span class="line">    fxLink = res[<span class="string">&#x27;fxLink&#x27;</span>]</span><br><span class="line">    weather = <span class="string">&#x27;生科当前天气:&#123;0&#125;\n当前温度:&#123;1&#125;\n风向:&#123;2&#125;\n风速:&#123;3&#125;\n湿度:&#123;4&#125;\n详情:&#123;5&#125;&#x27;</span>.<span class="built_in">format</span>(text, temp, windDir, windSpeed, humidity,fxLink)</span><br><span class="line"></span><br><span class="line">    xml_rep = <span class="string">&quot;&lt;xml&gt;&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;&lt;CreateTime&gt;%s&lt;/CreateTime&gt;&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;&lt;/xml&gt;&quot;</span></span><br><span class="line">    response = make_response(xml_rep % (fromu, tou, <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())),weather), <span class="number">200</span>)</span><br><span class="line">    response.content_type = <span class="string">&#x27;application/xml&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>人脸检测+数据训练+人脸识别</title>
      <link href="2021/04/19/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
      <url>2021/04/19/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>准备工作：<br>安装opencv</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv</span><br></pre></td></tr></table></figure><p>安装opencv-contrib</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-contrib</span><br></pre></td></tr></table></figure><p>创建文件夹，文件结构为：<br><img src="https://img-blog.csdnimg.cn/20201114091820994.png#pic_center" alt="在这里插入图片描述"></p><h2 id="一、编写一个基础的人脸识别"><a href="#一、编写一个基础的人脸识别" class="headerlink" title="一、编写一个基础的人脸识别"></a>一、编写一个基础的人脸识别</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">face_detect_demo</span>():</span></span><br><span class="line"><span class="comment"># ----------------------------------------------将图片灰度化----------------------------------------------</span></span><br><span class="line">        gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class="line">        <span class="comment"># 加载特征数据</span></span><br><span class="line">        face_detector = cv.CascadeClassifier(<span class="string">&#x27;C:/Program Files (x86)/opencv/sources/data/haarcascades/haarcascade_frontalface_default.xml&#x27;</span>)</span><br><span class="line">        faces = face_detector.detectMultiScale(gray)</span><br><span class="line">        <span class="keyword">for</span> x, y, w, h <span class="keyword">in</span> faces:</span><br><span class="line">            cv.rectangle(img, (x, y), (x + w, y + h), color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), thickness=<span class="number">2</span>)</span><br><span class="line">        cv.imshow(<span class="string">&#x27;result&#x27;</span>,img)</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载图片</span></span><br><span class="line">img = cv.imread(<span class="string">&#x27;C:/Users/Administrator/Desktop/my.jpg&#x27;</span>)</span><br><span class="line">face_detect_demo()</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="二、下载或者使用自己照片当训练素材"><a href="#二、下载或者使用自己照片当训练素材" class="headerlink" title="二、下载或者使用自己照片当训练素材"></a>二、下载或者使用自己照片当训练素材</h2><p>照片放在data下面的jm文件夹下面，照片名称是我们后面使用到的ID，命名要规范，后缀要一致。如下：<br><img src="https://img-blog.csdnimg.cn/20201114092224800.png#pic_center" alt="在这里插入图片描述"></p><p>我10张照片里面选了 1-3为马云的,4-7为普京的,8-10是周杰伦的照片。进行训练识别。</p><h2 id="三、编写训练代码："><a href="#三、编写训练代码：" class="headerlink" title="三、编写训练代码："></a>三、编写训练代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImageAndLabels</span>(<span class="params">path</span>):</span></span><br><span class="line">    facesSamples=[]</span><br><span class="line">    ids=[]</span><br><span class="line">    imagePaths=[os.path.join(path,f) <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(path)]</span><br><span class="line">    <span class="built_in">print</span>(imagePaths)</span><br><span class="line">    <span class="comment"># 检测人脸</span></span><br><span class="line">    face_detector = cv2.CascadeClassifier(</span><br><span class="line">        <span class="string">&#x27;C:/Program Files (x86)/opencv/sources/data/haarcascades/haarcascade_frontalface_default.xml&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历列表中的图片</span></span><br><span class="line">    <span class="keyword">for</span> imagePath <span class="keyword">in</span> imagePaths:</span><br><span class="line">        <span class="comment"># 打开图片</span></span><br><span class="line">        PIL_img = Image.<span class="built_in">open</span>(imagePath).convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将图像转换为数组</span></span><br><span class="line">        img_numpy = np.array(PIL_img,<span class="string">&#x27;uint8&#x27;</span>)</span><br><span class="line">        faces = face_detector.detectMultiScale(img_numpy)</span><br><span class="line">        <span class="comment"># 获取每张图片的id</span></span><br><span class="line">        <span class="built_in">print</span>(os.path.split(imagePath))</span><br><span class="line">        <span class="built_in">id</span> = <span class="built_in">int</span>(os.path.split(imagePath)[<span class="number">1</span>].split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">for</span> x,y,w,h <span class="keyword">in</span> faces:</span><br><span class="line">            facesSamples.append(img_numpy[y:y+h,x:x+w])</span><br><span class="line">            ids.append(<span class="built_in">id</span>)</span><br><span class="line">    <span class="keyword">return</span> facesSamples,ids</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">#图片路径</span></span><br><span class="line">    path = <span class="string">&#x27;./data/jm/&#x27;</span></span><br><span class="line">    <span class="comment">#获取图像 数组和id标签</span></span><br><span class="line">    faces,ids=getImageAndLabels(path)</span><br><span class="line">    <span class="comment">#获取循环对象</span></span><br><span class="line">    recognizer = cv2.face.LBPHFaceRecognizer_create()</span><br><span class="line">    recognizer.train(faces,np.array(ids))</span><br><span class="line">    <span class="comment">#保存文件</span></span><br><span class="line">    recognizer.write(<span class="string">&#x27;trainer/trainer.yml&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行代码后就会生成一个yml文件，这个文件路径我设置在trainer文件夹下面。<br>五、编写人脸识别代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1-3,4-7,8-10</span></span><br><span class="line">names = [<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;MY&#x27;</span>,<span class="string">&#x27;MY&#x27;</span>,<span class="string">&#x27;MY&#x27;</span>,<span class="string">&#x27;president:pitin&#x27;</span>,<span class="string">&#x27;president:pitin&#x27;</span>,<span class="string">&#x27;president:pitin&#x27;</span>,<span class="string">&#x27;president:pitin&#x27;</span>,<span class="string">&#x27;jay&#x27;</span>,<span class="string">&#x27;jay&#x27;</span>,<span class="string">&#x27;jay&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载训练数据和文件</span></span><br><span class="line">recognizer = cv2.face.LBPHFaceRecognizer_create()</span><br><span class="line">recognizer.read(<span class="string">&#x27;trainer/trainer.yml&#x27;</span>)</span><br><span class="line"><span class="comment">#准备识别的图片</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;C:/Users/Administrator/Desktop/6.jpg&#x27;</span>)</span><br><span class="line">gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)</span><br><span class="line">face_detector = cv2.CascadeClassifier(<span class="string">&#x27;C:/Program Files (x86)/opencv/sources/data/haarcascades/haarcascade_frontalface_default.xml&#x27;</span>)</span><br><span class="line">faces = face_detector.detectMultiScale(gray,minNeighbors=<span class="number">30</span>)</span><br><span class="line"><span class="keyword">for</span> x,y,w,h <span class="keyword">in</span> faces:</span><br><span class="line">    <span class="built_in">id</span>, confidence = recognizer.predict(gray[y:y + h, x:x + w]) <span class="comment"># 人脸识别</span></span><br><span class="line">    cv2.rectangle(img,(x,y),(x+w,y+h),(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>),<span class="number">2</span>)</span><br><span class="line">    name = names[<span class="built_in">id</span>]</span><br><span class="line">    cv2.putText(img,name,(x,y),cv2.FONT_HERSHEY_COMPLEX,<span class="number">1</span>,(<span class="number">128</span>,<span class="number">128</span>,<span class="number">0</span>),<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;标签id:&#x27;</span>,<span class="built_in">id</span>,<span class="string">&#x27;置信评分:&#x27;</span>,confidence)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;result&#x27;</span>,img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>基础的人脸检测的思路是：<br>1.灰度化图片<br>2.加载特征数据<br>3.检测灰度图片中的人脸(可以是多个人脸)，获取每一个的人脸坐标<br>5.遍历绘制人脸框，显示图像<br>6.释放capture内存，销毁所有窗口。</p><p>训练数据的思路：<br>1.在上面基础上，遍历获取ID和人脸的宽度和高度(y:y+h,x:x+w)<br>2.创建<code>cv2.face.LBPHFaceRecognizer_create()</code>LBPHFF特征算法类<br>3.使用<code>.train(faces,np.array(ids))</code>进行训练。<br>4.保存yml文件<code>.write(&#39;trainer/trainer.yml&#39;)</code></p><p>人脸识别思路：<br>1.导入数据文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载训练数据和文件</span></span><br><span class="line">recognizer = cv2.face.LBPHFaceRecognizer_create()</span><br><span class="line">recognizer.read(<span class="string">&#x27;trainer/trainer.yml&#x27;</span>)</span><br></pre></td></tr></table></figure><p>2.按照基础的人脸检测方法，在遍历faces的时候，也就是在被检测的人脸中去匹配特征信息<br>使用<code>.predict(gray[y:y + h, x:x + w])</code>方法进行人脸识别。</p><p>3.最后使用<code>.putText(img,name,(x,y),cv2.FONT_HERSHEY_COMPLEX,1,(128,128,0),2)</code>方法进行标签的绘制。</p><p>经过训练后，我去网上找了一张程序从来没有见过的普京的照片。<br>然后让它识别并且给出一个置信指数，注意指数越低越靠谱，一般来说50的指数为可信度非常强，70以上可信度较弱，指数为0时，则是100%可信，也就是100%匹配。</p><p><img src="https://img-blog.csdnimg.cn/20201114100253480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE3ODAyODk1,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>结果显示 左右的图片(网上找的，程序不认识的)和训练库中id为6的图片匹配(也就是右边的图片)，置信指数55，可见可信度还是比较高的，至此为止整个人脸识别就全部完成了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库基本操作</title>
      <link href="2021/04/19/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>2021/04/19/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p><strong>启动数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysql</span><br></pre></td></tr></table></figure><p><strong>登录数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p><strong>创建数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database Book;</span><br></pre></td></tr></table></figure><p><strong>选择数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use Book;</span><br></pre></td></tr></table></figure><p><strong>创建表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table <span class="keyword">if</span> not exists `book`(</span><br><span class="line">`id` int unsigned auto_increment,</span><br><span class="line">`name` varchar(100) not null,</span><br><span class="line">`sid` varchar(100) not null,</span><br><span class="line">`submission_date` date,</span><br><span class="line">primary key (`id`)</span><br><span class="line">)engine=InnoDB default charset=utf8;</span><br></pre></td></tr></table></figure><p><strong>插入数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into book</span><br><span class="line">(id,name,sid,submission_date)</span><br><span class="line">values</span><br><span class="line">(<span class="string">&quot;1001&quot;</span>,<span class="string">&quot;黄宏哲&quot;</span>,<span class="string">&quot;1905080101&quot;</span>,now());</span><br></pre></td></tr></table></figure><p><strong>查询数据</strong></p><p>查询全部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from book; </span><br></pre></td></tr></table></figure><p><strong>按某个值查询</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from book <span class="built_in">where</span> id=<span class="string">&quot;1001&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>按正则表达式查询</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from book <span class="built_in">where</span> name regexp <span class="string">&quot;正则表达式&quot;</span>;</span><br></pre></td></tr></table></figure><p>修改字段类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table [表名] modify column [字段名] [数据类型];</span><br></pre></td></tr></table></figure><p><strong>更新数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update book <span class="built_in">set</span> name=<span class="string">&quot;二狗&quot;</span> <span class="built_in">where</span> id=<span class="string">&quot;1001&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>删除数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from book <span class="built_in">where</span> id=<span class="string">&quot;1003&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>排序查看</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from book order by [字段名] asc;</span><br></pre></td></tr></table></figure><p><strong>导出数据</strong><br>txt导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from book into outfile <span class="string">&quot;/tmp/学生信息.txt&quot;</span>;</span><br></pre></td></tr></table></figure><p>csv导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from book</span><br><span class="line">into outfile <span class="string">&#x27;/tmp/导出的数据.csv&#x27;</span></span><br><span class="line">fields terminated by <span class="string">&#x27;,&#x27;</span></span><br><span class="line">optionally enclosed by <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">lines terminated by <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>导入数据</strong><br>txt导入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data <span class="built_in">local</span> infile <span class="string">&#x27;dump.txt&#x27;</span> into table book;</span><br></pre></td></tr></table></figure><blockquote><p>注意,local关键字为客户主机读取文件,不加则必须文件需要在本地服务器上.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data <span class="built_in">local</span> infile <span class="string">&#x27;[文件名]&#x27;</span> into table book;</span><br></pre></td></tr></table></figure><p>csv导入(默认替换原数据)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">load data infile <span class="string">&#x27;/temp/学生名单.csv&#x27;</span></span><br><span class="line">replace into book </span><br><span class="line">character <span class="built_in">set</span> utf8</span><br><span class="line">fields terminated by <span class="string">&#x27;,&#x27;</span></span><br><span class="line">optionally enclosed by <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">lines terminated by <span class="string">&#x27;\r\n&#x27;</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th>terminated by</th><th>分隔符</th></tr></thead><tbody><tr><td>enclosed by</td><td>字符括起符</td></tr><tr><td>escaped by</td><td>转义符</td></tr><tr><td>lines terminated by</td><td>换行符</td></tr></tbody></table><p>参考:<a href="https://www.cnblogs.com/shamao/p/11594170.html">mysql学习</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从自我分析谈学习的动力</title>
      <link href="2021/04/18/%E5%AD%A6%E4%B9%A0%E5%88%86%E6%9E%90/"/>
      <url>2021/04/18/%E5%AD%A6%E4%B9%A0%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>我是个学习很差的人，关于学习为什么搞不进去，有过许多的想法，随着时间的变化认知也慢慢发生改变。</p><h4 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段:"></a>第一阶段:</h4><p>最初的对学习的思考仅仅停留在，<strong>别人脑瓜子聪明，我自己又爱玩游戏的原因，所以搞不好学习</strong>。</p><h4 id="第二阶段："><a href="#第二阶段：" class="headerlink" title="第二阶段："></a>第二阶段：</h4><p>后来看电视也好，刷知乎，微博，论坛，等媒体，看到许许多多人，许许多多的事情，我受到影响，我坚定了，<strong>别人学习搞得好肯定是有原因的，但是这个原因暂时还弄不清楚，肯定不是我自己笨</strong>。</p><p>我认为这个阶段的思想是相当重要的，并不是有这种思想就能够成就自己，而是许许多多的像我这种从乡镇，农村地区走出来的人接受了外界对自己关于学习负面的评价 ,例如 “不是读书的料”，甚至有些父母都是这样去评价自己的子女。这种情况导致了许多的人或多或少的接受了这种评价，在心中形成较为固定的观念，或者说潜移默化的被影响了思想，自我效能感低下。每每碰到学习的困难，就用这种”自己不是学习的料”固有的思想观念来说服自己，学习就这样放弃了。</p><p>显然这种“天生不是学习料”的观念有巨大漏洞，”书山有路勤为径，学海无涯苦作舟”，“学习就像逆水行舟，不进则退”，“头悬梁，锥刺股”等等，都无不说明了学习的过程是困难的，并非是个人的原因。</p><h4 id="第三阶段："><a href="#第三阶段：" class="headerlink" title="第三阶段："></a>第三阶段：</h4><p><strong>学习是苦的，学习不是靠自己强迫，就是靠外界强迫。</strong></p><p>此时的思想已经越发成熟，我已经能够认识到学习就是一件很苦逼的事情，谁也不例外，至于人智商的差异几乎可以忽略不计，后天决定99%，至于人智商的差异这点，很多人有不同意见，但是不管怎么样，我们从成长的角度来讲，只有承认后天努力决定成败，才能够在碰到学习困难的时候去找自己的原因，而不是相信智商的差异，然后止步不前。</p><h4 id="第四阶段："><a href="#第四阶段：" class="headerlink" title="第四阶段："></a>第四阶段：</h4><p>只有不断探索属于自己的学习方法，实践结合理论，在学习中去总结，总结后反过来形成理论指导下一步的学习。</p><p>简单的说就是：<strong>学习厉不厉害，主看看你花了多少时间在学习上。</strong></p><p>我总结了6种通过学习成功完成目标的状态：</p><p>1.全程被强迫完成目标<br>2.外界强迫,时常也自驱<br>3.全程强迫自己完成目标<br>4.主动完成一部分，被动完成一部分。<br>5.主动完成一部分，被动完成一部分，自驱完成一部分。<br>6.全程主动完成目标</p><p>自驱:也就是强迫自己，基于认知上面的原因。<br>主动:主动学习探索，基于兴趣方面的原因。</p><p><strong>总结:外部压力，自驱力，兴趣决定了我们的学习的动力</strong></p><blockquote><p>学习方法那些是提升效率，而不是动力的来源</p></blockquote><blockquote><p>如果你的学校管学习管的松，自己对自己要求不严格，而且还没有兴趣，那么你学习就没有了动力。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习认知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anki使用笔记</title>
      <link href="2021/03/24/Anki%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>2021/03/24/Anki%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="使用AwesomeTTS-自动播放单词-文本-读音"><a href="#使用AwesomeTTS-自动播放单词-文本-读音" class="headerlink" title="使用AwesomeTTS,自动播放单词(文本)读音"></a>使用AwesomeTTS,自动播放单词(文本)读音</h4><p>由于这是基于ankidroid 的插件，所以最好是在电脑版anki上操作。</p><p>步骤</p><p>一、请在计算机上打开Anki，转到“工具”菜单，然后依次单击“附件”&gt;“浏览和安装”以粘贴代码</p><p>(具体代码在点击浏览后自动跳转网页，点击具体插件项目，里面会有具体的下载代码)</p><p>二、请在计算机上打开Anki后，点击浏览，选择具体的词库，<code>CTRL+A</code>全选(当然，也可以自己随意选)，点击”AwesomeTTS”&gt;”add audio to selected”</p><p>此时，<strong>source field 表示发音的面，destination field 表示触发条件的面</strong></p><p>最后点击 “generate”就生成啦</p><p>android 版anki设置:  “高级设置” &gt; “插件” &gt;”启用ankiDriod API”</p><p>点击同步，手机上也可以同步使用，自动发音啦。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习工具,英语单词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背单词方法</title>
      <link href="2021/03/15/one/"/>
      <url>2021/03/15/one/</url>
      
        <content type="html"><![CDATA[<h5 id="App背单词"><a href="#App背单词" class="headerlink" title="App背单词"></a>App背单词</h5><p>推荐扇贝单词，百词斩，欧路单词</p><p>我用过几款背单词软件，个人觉得扇贝比较好用，刷单词快，重复的次数多。</p><p>其次就是欧路单词了，它的功能强大，支持自定义导入，并提供开发者API接口，以操作生词本。</p><p>百词斩嘛，褒贬不一,看个人喜好。</p><h5 id="AnKi单词"><a href="#AnKi单词" class="headerlink" title="AnKi单词"></a>AnKi单词</h5><p>这是一款免费的，功能非常强大的app, 之所以单独来讲，是因为它几乎可以做一切帮助你记忆的事情。</p><p>考个兽医资格证？考个药剂师？考个营养师？统统搞定！</p><h6 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h6><ol><li>根据英文回想中文，分为3个选项 想不起来，模糊，正确。</li><li>根据中文回忆英文，同上</li><li>根据中文默写出英文</li><li>根据音频默写</li><li>例句填空</li><li>等等功能待探索…</li></ol><h6 id="自定义模板"><a href="#自定义模板" class="headerlink" title="自定义模板"></a>自定义模板</h6><p>basic,背单词,填空等…</p><h6 id="批量导入"><a href="#批量导入" class="headerlink" title="批量导入"></a>批量导入</h6><p>支持utf-8,txt,csv等等</p><h5 id="丰富的词汇库"><a href="#丰富的词汇库" class="headerlink" title="丰富的词汇库"></a>丰富的词汇库</h5><p>可以访问:<a href="https://ankibbs.com/">Anki中国社区</a>，获取超多资源</p><p>无论你是学什么专业，无论是什么语言，</p><p>四六级，高考，小中初，升本，考研，雅思托福…</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语单词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现上课提醒</title>
      <link href="2021/03/15/%E4%B8%8A%E8%AF%BE%E6%8F%90%E9%86%92/"/>
      <url>2021/03/15/%E4%B8%8A%E8%AF%BE%E6%8F%90%E9%86%92/</url>
      
        <content type="html"><![CDATA[<p><strong>目的:通过邮件定时发送课表信息，实现提醒的目的。</strong></p><p>首先我们讲一下工作原理:</p><p>服务器开机后(加载完毕/etc/rc.d/rc.local后)</p><p> 读取timer单元 -&gt; 等待启动服务 -&gt; 程序模拟登录 -&gt; 获取课表信息 -&gt; 数据处理 -&gt; 发送邮件 </p><p><strong>工欲善其事必先利其器</strong></p><p>需要的硬件设备：</p><p>1.一台可以写代码的电脑,用来编写代码管理服务器</p><p>2.一台本地服务器，或者云服务器,用来运行代码</p><p>运行需要的系统环境:</p><p>linux系统即可:ubuntu,debian,centos等…</p><blockquote><p>需要注意的是，本文采用Systemd进程管理来实现目的，老系统的init程序有的是SysV类型和Upstart类型。</p></blockquote><p>然后编写获取课表信息的代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re,smtplib</span><br><span class="line"><span class="keyword">import</span> requests,time</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course_system</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.session = requests.Session()</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;aic.hbswkj.com:8080&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:81.0) Gecko/20100101 Firefox/81.0&#x27;</span>,    </span><br><span class="line">        &#125;</span><br><span class="line">        self.session.get(<span class="string">&quot;http://aic.hbswkj.com:8080/jedu/&quot;</span>,headers=self.headers)</span><br><span class="line">        self.isLogin = <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        localtime = time.localtime(time.time())</span><br><span class="line">        now_time = time.strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>,localtime) <span class="comment">#获取年月日</span></span><br><span class="line">        </span><br><span class="line">        self.weekofday = <span class="built_in">str</span>(datetime.today().isoweekday())          <span class="comment">#获取当前期第周几</span></span><br><span class="line">        </span><br><span class="line">        self.weeks = <span class="built_in">int</span>(time.strftime(<span class="string">&quot;%W&quot;</span>))-<span class="number">34</span>                     <span class="comment">#获取当前是第几周</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;当前时间：&#x27;</span>+now_time)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;第:&#123;&#125;周,星期:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.weeks,self.weekofday))</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trylogin</span>(<span class="params">self,username,password</span>):</span></span><br><span class="line">            res= self.session.post(<span class="string">&quot;http://aic.hbswkj.com:8080/jedu/login.do&quot;</span>,&#123;</span><br><span class="line">                <span class="string">&quot;username&quot;</span>:username,</span><br><span class="line">                <span class="string">&quot;password&quot;</span>:password</span><br><span class="line">            &#125;,headers=self.headers).json()</span><br><span class="line">            self.isLogin = res[<span class="string">&quot;success&quot;</span>]</span><br><span class="line">            <span class="keyword">if</span> res[<span class="string">&quot;success&quot;</span>]:</span><br><span class="line">                self.session.cookies.<span class="built_in">set</span>(<span class="string">&#x27;username&#x27;</span>,username)</span><br><span class="line">                time.sleep(<span class="number">0.2</span>)</span><br><span class="line">                self.session.get(<span class="string">&quot;http://aic.hbswkj.com:8080/jedu/index.do&quot;</span>,headers=self.headers).content</span><br><span class="line">            <span class="keyword">return</span> self.isLogin</span><br><span class="line"></span><br><span class="line">    <span class="comment"># weeks = int(time.strftime(&quot;%W&quot;))-8  2021年</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_course_info</span>(<span class="params">self,weeks = <span class="built_in">int</span>(<span class="params">time.strftime(<span class="params"><span class="string">&quot;%W&quot;</span></span>)</span>) -<span class="number">8</span></span>):</span></span><br><span class="line">        </span><br><span class="line">        res = self.session.get(<span class="string">&#x27;http://aic.hbswkj.com:8080/jedu/edu/core/eduScheduleInfo/getStudentWeekSchedule.do?week=%s&amp;semId=&#x27;</span>%(weeks),headers = self.headers)</span><br><span class="line">        length = <span class="built_in">len</span>(res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;schedule&#x27;</span>])</span><br><span class="line">        info = &#123;&#125;</span><br><span class="line">        name1 = []</span><br><span class="line">        name2 = []</span><br><span class="line">        name3 = []</span><br><span class="line">        name4 = []</span><br><span class="line">        name5 = []</span><br><span class="line">        name6 = []</span><br><span class="line">        name7 = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">            name = res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;schedule&#x27;</span>][i][<span class="string">&#x27;courseName&#x27;</span>]</span><br><span class="line">            placeName = res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;schedule&#x27;</span>][i][<span class="string">&#x27;placeName&#x27;</span>] + <span class="string">&#x27;&#x27;</span></span><br><span class="line">            week = res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;schedule&#x27;</span>][i][<span class="string">&#x27;weekOfDay&#x27;</span>]</span><br><span class="line">            start = <span class="built_in">str</span>(res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;schedule&#x27;</span>][i][<span class="string">&#x27;eduTimeSchedule&#x27;</span>][<span class="string">&#x27;eduLesson&#x27;</span>][<span class="string">&#x27;startLesson&#x27;</span>])</span><br><span class="line">            end = <span class="built_in">str</span>(res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;schedule&#x27;</span>][i][<span class="string">&#x27;eduTimeSchedule&#x27;</span>][<span class="string">&#x27;eduLesson&#x27;</span>][<span class="string">&#x27;endLesson&#x27;</span>])</span><br><span class="line">            <span class="comment"># print(week)</span></span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;mon&#x27;</span>:</span><br><span class="line">                name1.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;tue&#x27;</span>:</span><br><span class="line">                name2.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;wed&#x27;</span>:</span><br><span class="line">                name3.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;thu&#x27;</span>:</span><br><span class="line">                name4.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;fri&#x27;</span>:</span><br><span class="line">                name5.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;sat&#x27;</span>:</span><br><span class="line">                name6.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line">            <span class="keyword">if</span> week==<span class="string">&#x27;sun&#x27;</span>:</span><br><span class="line">                name7.append(<span class="string">&#x27;第&#x27;</span>+start+<span class="string">&#x27;~&#x27;</span>+end+<span class="string">&#x27;节:&#x27;</span> + name+<span class="string">&quot;\n地点:&quot;</span>+placeName)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        name1.sort()</span><br><span class="line">        name2.sort()</span><br><span class="line">        name3.sort()</span><br><span class="line">        name4.sort()</span><br><span class="line">        name5.sort()</span><br><span class="line">        name6.sort()</span><br><span class="line">        name7.sort()</span><br><span class="line"></span><br><span class="line">        info[<span class="string">&#x27;1&#x27;</span>] = name1</span><br><span class="line">        info[<span class="string">&#x27;2&#x27;</span>] = name2</span><br><span class="line">        info[<span class="string">&#x27;3&#x27;</span>] = name3</span><br><span class="line">        info[<span class="string">&#x27;4&#x27;</span>] = name4</span><br><span class="line">        info[<span class="string">&#x27;5&#x27;</span>] = name5</span><br><span class="line">        info[<span class="string">&#x27;6&#x27;</span>] = name6</span><br><span class="line">        info[<span class="string">&#x27;7&#x27;</span>] = name7</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> info</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">qq_mail</span>(<span class="params">self,code = <span class="number">0</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> code==<span class="number">0</span>:</span><br><span class="line">            to_addr = <span class="string">&#x27;2528104776@qq.com&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            to_addr=[<span class="string">&#x27;2218338677@qq.com&#x27;</span>,<span class="string">&#x27;664683760@qq.com&#x27;</span>,<span class="string">&#x27;2889611959@qq.com&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;1448427015@qq.com&#x27;</span>,<span class="string">&#x27;2163876959@qq.com&#x27;</span>]</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        content = <span class="string">&#x27;Today:&#x27;</span>+ time.strftime(<span class="string">&#x27;%a&#x27;</span>) + <span class="string">&#x27;\n&#x27;</span>+self.print_course()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 用于构建邮件头</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#发信方的信息：发信邮箱，QQ 邮箱授权码</span></span><br><span class="line">        from_addr = <span class="string">&#x27;2528104776@qq.com&#x27;</span></span><br><span class="line">        </span><br><span class="line">        password = <span class="string">&#x27;nzcrizitixisdicb&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># to_addr 收信方邮箱</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 发信服务器</span></span><br><span class="line">        smtp_server = <span class="string">&#x27;smtp.qq.com&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 邮箱正文内容，第一个参数为内容，第二个参数为格式(plain 为纯文本)，第三个参数为编码</span></span><br><span class="line">        msg = MIMEText(content, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 邮件头信息</span></span><br><span class="line">        msg[<span class="string">&#x27;From&#x27;</span>] = Header(from_addr)</span><br><span class="line">        msg[<span class="string">&#x27;To&#x27;</span>] = Header(<span class="string">&quot;,&quot;</span>.join(to_addr))</span><br><span class="line">        msg[<span class="string">&#x27;Subject&#x27;</span>] = Header(<span class="string">&#x27;上课提醒&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 开启发信服务，这里使用的是加密传输</span></span><br><span class="line">        server = smtplib.SMTP_SSL()</span><br><span class="line">        server.connect(smtp_server, <span class="number">465</span>)</span><br><span class="line">        <span class="comment"># 登录发信邮箱</span></span><br><span class="line">        server.login(from_addr, password)</span><br><span class="line">        <span class="comment"># 发送邮件</span></span><br><span class="line">        server.sendmail(from_addr, to_addr, msg.as_string())</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;课表信息发送成功!&quot;</span>)</span><br><span class="line">        <span class="comment"># 关闭服务器</span></span><br><span class="line">        server.quit()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_course</span>(<span class="params">self,weekofday = <span class="built_in">str</span>(<span class="params">datetime.today(<span class="params"></span>).isoweekday(<span class="params"></span>)</span>) </span>):</span></span><br><span class="line">        course_info = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        info = self.get_course_info()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;今天星期:%s&#x27;</span>%(self.weekofday))</span><br><span class="line">        <span class="keyword">if</span> info[weekofday]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;=&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> info[weekofday]:</span><br><span class="line">                <span class="built_in">print</span>(i)</span><br><span class="line">                course_info+=i + <span class="string">&#x27;\n\n&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> course_info</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;=&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;=&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;今天没有课&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;=&#x27;</span>*<span class="number">30</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;今天没有课哟~&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">#食加</span></span><br><span class="line">    course_system = Course_system()</span><br><span class="line">    course_system.trylogin(<span class="string">&#x27;***&#x27;</span>, <span class="string">&#x27;***&#x27;</span>)</span><br><span class="line">    course_system.get_course_info()</span><br><span class="line">    course_system.qq_mail()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#水产</span></span><br><span class="line">    course_system.trylogin(<span class="string">&#x27;***&#x27;</span>, <span class="string">&#x27;***&#x27;</span>)</span><br><span class="line">    course_system.get_course_info()</span><br><span class="line">    course_system.qq_mail(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们配置一下服务器上面的环境:</p><p>1.安装python3,pip3</p><p>2.安装bs4,requests</p><p>2.检查systemd是否能正常开启服务单元</p><p>3.检查邮件模块是否需要安装相关依赖包</p><p><strong>一、设置service单元</strong></p><p>切换路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /lib/systemd/system</span><br></pre></td></tr></table></figure><p>新建文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.service</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=<span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/bin/python3 [文件绝对路径]</span><br></pre></td></tr></table></figure><p>管理命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systemctl start test.service 启动服务</span><br><span class="line">systemctl stop test.service 停止服务</span><br><span class="line">systemctl status test.service 查看服务状态</span><br><span class="line">systemctl reload test.service 重新加载服务</span><br><span class="line">systemctl daemon-load 重新加载后台服务</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「阿狸的情书」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_17802895&#x2F;article&#x2F;details&#x2F;108227292</span><br></pre></td></tr></table></figure><p>创建timer定时器单元</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;lib&#x2F;systmed&#x2F;system</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Runs mytimer every hour</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line">OnCalendar&#x3D;1h</span><br><span class="line">Unit&#x3D;[服务单元文件名]</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p>然后重新加载一下后台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>更改权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable [timer-file]</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start [timer-file]</span><br></pre></td></tr></table></figure><p>附:<a href="http://www.jinbuguo.com/systemd/systemd.time.html#">金步国中文翻译文档</a></p><p>​    <a href="https://www.freedesktop.org/software/systemd/man/systemd.time.html">定时器时间设置官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3月风景</title>
      <link href="2021/03/15/3.14/"/>
      <url>2021/03/15/3.14/</url>
      
        <content type="html"><![CDATA[<p><img src="/post_pictures/8.jpg" alt="华农湖边" title="hello"></p><p><img src="/post_pictures/9.jpg" alt="野芷湖" title="hello"></p><p><img src="/post_pictures/10.jpg" alt="咖啡店" title="hello"></p><p><img src="/post_pictures/11.jpg" alt="咖啡店" title="hello"></p>]]></content>
      
      
      <categories>
          
          <category> 风景 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 校园 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HuBei-biology-technology-vocation-college</title>
      <link href="2021/02/25/scenery/"/>
      <url>2021/02/25/scenery/</url>
      
        <content type="html"><![CDATA[<p><img src="/post_pictures/1.jpg" alt="夜晚的野芷湖" title="hello"></p><p><img src="/post_pictures/2.jpg" alt="清晨" title="hello"></p><p><img src="/post_pictures/3.jpg" alt="夜晚" title="hello"></p><p><img src="/post_pictures/4.jpg" alt="拂晓" title="hello"></p><p><img src="/post_pictures/5.jpg" alt="深夜的对岸" title="hello"></p><p><img src="/post_pictures/6.jpg" alt="8点十分" title="hello"></p><p><img src="/post_pictures/7.jpg" alt="湖上的桥" title="hello"></p>]]></content>
      
      
      <categories>
          
          <category> 风景 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 校园 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
